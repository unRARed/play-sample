= turbo_frame_tag "sample_pad_#{params[:position]}" do
  .p-2.bg-base-200.rounded-lg.shadow-lg.overflow-y-auto.max-h-full.bg-gray-900
    = form_with(model: [@sample_pad, @sample], data: { turbo: true }) do |form|
      .space-y-3
        // Hidden field for position
        = form.hidden_field :position, value: params[:position]

        // Sample name - no label
        .form-control
          = form.text_field :name, class: "input input-bordered w-full input-sm text-sm bg-gray-800 border-gray-700", required: true, placeholder: "Kick Drum"
        
        // Use first color by default (hidden field)
        = form.hidden_field :color, value: Sample::COLORS.first
        
        // Play mode with radio buttons only - no label
        .grid.grid-cols-3.gap-2.mt-2
          / Exclusive option with icon above
          .text-center
            .icon.mb-1
              i.fas.fa-volume-up.text-gray-300.text-lg
            .text-xs.text-gray-300.font-medium Exclusive
            .flex.justify-center.items-center.mt-1
              = form.radio_button :play_mode, "exclusive", class: "radio radio-primary radio-sm", required: true, checked: true
          
          / Simultaneous option with icon above
          .text-center
            .icon.mb-1
              i.fas.fa-layer-group.text-gray-300.text-lg
            .text-xs.text-gray-300.font-medium Simultaneous
            .flex.justify-center.items-center.mt-1
              = form.radio_button :play_mode, "simultaneous", class: "radio radio-primary radio-sm", required: true
          
          / Loop option with icon above
          .text-center
            .icon.mb-1
              i.fas.fa-sync-alt.text-gray-300.text-lg
            .text-xs.text-gray-300.font-medium Loop
            .flex.justify-center.items-center.mt-1
              = form.radio_button :play_mode, "loop", class: "radio radio-primary radio-sm", required: true
        
        // Audio file - no label
        .form-control.mt-4
          = form.file_field :audio, class: "file-input file-input-bordered file-input-sm w-full text-xs bg-gray-800 border-gray-700", accept: "audio/*", required: true, direct_upload: true

        // Buttons - smaller
        .flex.justify-between.mt-4
          = link_to "Cancel", sample_pad_path(@sample_pad), class: "btn btn-ghost btn-sm text-sm"
          = form.submit "Add Sample", class: "btn btn-primary btn-sm text-sm"

// Very minimal JavaScript for direct uploads
javascript:
  document.addEventListener('direct-upload:initialize', event => {
    const { target, detail } = event
    const { id, file } = detail
    
    // Create progress bar
    const progressBar = document.createElement('div')
    progressBar.id = `direct-upload-${id}`
    progressBar.classList.add('progress', 'w-full', 'mt-2')
    
    // Create progress bar inner
    const progressInner = document.createElement('div')
    progressInner.classList.add('progress-bar', 'bg-primary')
    progressInner.style.width = '0%'
    progressBar.appendChild(progressInner)
    
    // Add progress bar after file input
    target.insertAdjacentElement('afterend', progressBar)
  })
  
  document.addEventListener('direct-upload:progress', event => {
    const { id, progress } = event.detail
    const progressInner = document.querySelector(`#direct-upload-${id} .progress-bar`)
    if (progressInner) {
      progressInner.style.width = `${progress}%`
    }
  })
  
  // Color selector
  document.addEventListener('turbo:load', () => {
    const colorInputs = document.querySelectorAll('input[type="radio"][name*="color"]')
    colorInputs.forEach(input => {
      input.addEventListener('change', () => {
        // Hide all checks
        document.querySelectorAll('[data-color-check]').forEach(check => check.classList.add('hidden'))
        
        // Add border to selected color
        document.querySelectorAll('[data-color]').forEach(el => {
          el.classList.remove('border-primary')
          el.classList.add('border-base-300')
        })
        
        if (input.checked) {
          const color = input.value
          const colorEl = document.querySelector(`[data-color="${color}"]`)
          const checkIcon = document.querySelector(`[data-color-check="${color}"]`)
          
          if (colorEl) {
            colorEl.classList.remove('border-base-300')
            colorEl.classList.add('border-primary', 'border-4')
          }
          
          if (checkIcon) {
            checkIcon.classList.remove('hidden')
          }
        }
      })
    })
  })
