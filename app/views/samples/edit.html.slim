= turbo_frame_tag "sample_pad_#{@sample.position}" do
  .p-4.bg-base-200.rounded-lg.shadow-lg
    h3.font-bold.text-lg.mb-4
      i.fas.fa-edit.mr-2
      | Edit Sample on Pad #{@sample.position}
    
    = form_with(model: [@sample_pad, @sample], data: { turbo: true }) do |form|
      .space-y-4
        // Hidden field for position
        = form.hidden_field :position

        // Sample name
        .form-control
          = form.label :name, class: "label font-semibold"
          = form.text_field :name, class: "input input-bordered w-full", required: true

        // Display label
        .form-control
          = form.label :label, class: "label font-semibold"
          = form.text_field :label, class: "input input-bordered w-full", required: true, maxlength: 4
        
        // Color selection
        .form-control
          = form.label :color, class: "label font-semibold"
          .grid.grid-cols-4.gap-2.mt-2
            - Sample::COLORS.each do |color|
              label.cursor-pointer
                = form.radio_button :color, color, class: "hidden"
                .w-full.aspect-square.rounded-md.border-2.transition-all.flex.items-center.justify-center data-color=color class="bg-#{color}-500 border-base-300 hover:border-primary #{'border-primary border-4' if @sample.color == color}"
                  i.fas.fa-check class="#{'hidden' unless @sample.color == color}" data-color-check=color
        
        // Play mode
        .form-control
          = form.label :play_mode, class: "label font-semibold"
          .flex.space-x-4
            label.cursor-pointer.flex.items-center
              = form.radio_button :play_mode, "exclusive", class: "radio radio-primary mr-2"
              span Exclusive
            label.cursor-pointer.flex.items-center
              = form.radio_button :play_mode, "simultaneous", class: "radio radio-primary mr-2"
              span Simultaneous
        
        // Current audio file info
        - if @sample.audio.attached?
          .form-control
            = form.label :audio, "Current Audio", class: "label font-semibold"
            .p-2.bg-base-100.rounded-md.flex.items-center
              i.fas.fa-music.mr-2.text-primary
              span = @sample.audio.filename
          
          // Option to replace audio
          .form-control.mt-2
            = form.label :audio, "Replace Audio (Optional)", class: "label font-semibold"
            = form.file_field :audio, class: "file-input file-input-bordered w-full", accept: "audio/*", direct_upload: true
        - else
          // Audio file (required if no existing file)
          .form-control
            = form.label :audio, class: "label font-semibold"
            = form.file_field :audio, class: "file-input file-input-bordered w-full", accept: "audio/*", required: true, direct_upload: true

        // Buttons
        .flex.justify-between.mt-6
          .space-x-2
            = link_to "Cancel", sample_pad_path(@sample_pad), class: "btn btn-ghost"
            = link_to "Delete", sample_pad_sample_path(@sample_pad, @sample), 
                      class: "btn btn-error", 
                      data: { turbo_method: :delete, turbo_confirm: "Are you sure you want to delete this sample?" }
          = form.submit "Update Sample", class: "btn btn-primary"

// Color selector JavaScript
javascript:
  document.addEventListener('turbo:load', () => {
    const colorInputs = document.querySelectorAll('input[type="radio"][name*="color"]')
    colorInputs.forEach(input => {
      input.addEventListener('change', () => {
        // Hide all checks
        document.querySelectorAll('[data-color-check]').forEach(check => check.classList.add('hidden'))
        
        // Reset all borders
        document.querySelectorAll('[data-color]').forEach(el => {
          el.classList.remove('border-primary', 'border-4')
          el.classList.add('border-base-300')
        })
        
        if (input.checked) {
          const color = input.value
          const colorEl = document.querySelector(`[data-color="${color}"]`)
          const checkIcon = document.querySelector(`[data-color-check="${color}"]`)
          
          if (colorEl) {
            colorEl.classList.remove('border-base-300')
            colorEl.classList.add('border-primary', 'border-4')
          }
          
          if (checkIcon) {
            checkIcon.classList.remove('hidden')
          }
        }
      })
    })
  })
